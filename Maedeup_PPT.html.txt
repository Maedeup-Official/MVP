<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Maedeup - Interactive Demo</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            scroll-behavior: smooth;
        }
        .section {
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            padding: 2rem 1.5rem;
            text-align: center;
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.6s ease-out, transform 0.6s ease-out;
            visibility: hidden;
        }
        .section.visible {
            opacity: 1;
            transform: translateY(0);
            visibility: visible;
        }
        .wallet-popup {
            transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
        }
        .wallet-popup.hidden {
            opacity: 0;
            transform: scale(0.95);
            pointer-events: none;
        }
        .step-indicator {
            position: fixed;
            right: 1rem;
            top: 50%;
            transform: translateY(-50%);
            display: flex;
            flex-direction: column;
            gap: 0.75rem;
            z-index: 50;
        }
        .step-indicator a {
            width: 12px;
            height: 12px;
            border-radius: 9999px;
            background-color: #D1D5DB;
            transition: background-color 0.3s, transform 0.3s;
        }
        .step-indicator a.active {
            background-color: #14746F; /* Brand Color */
            transform: scale(1.25);
        }
        .sim-button {
            cursor: pointer;
            background-color: #14746F; /* Brand Color */
            color: white;
            padding: 0.75rem 1.5rem;
            border-radius: 9999px;
            font-weight: 600;
            transition: background-color 0.3s, transform 0.2s;
            margin-top: 1.5rem;
        }
        .sim-button:hover {
            background-color: #11615C; /* Darker Brand Color */
        }
        .sim-button:active {
            transform: scale(0.95);
        }
        .sim-button:disabled {
            background-color: #A0AEC0;
            cursor: not-allowed;
        }
    </style>
    <!-- Chosen Palette: Maedeup Brand Colors (Background: #F9F7F3, Primary Text: #333333, Brand: #14746F) -->
    <!-- Application Structure Plan: A narrative-driven, single-page vertical scrolling experience. This structure guides the user through a compelling story: starting with the universal problem of P2P fraud, introducing Maedeup as the definitive solution, and then interactively demonstrating key features (escrow, competitive deposit, oracle). This linear flow is ideal for a demo, ensuring users grasp the core value proposition step-by-step without being overwhelmed, maximizing engagement and comprehension on mobile devices. -->
    <!-- Visualization & Content Choices: 
        - Problem Stats -> Inform -> Animated Counter (USD) -> JS Interaction -> Highlights the global scale of the problem.
        - Escrow Process -> Organize -> HTML/CSS Diagram -> User-triggered JS Animation -> Gives user control over the demo, making the complex Web3 concept more digestible. Confirms NO SVG/Mermaid.
        - Competitive Deposit -> Inform/Compare -> Live TVL Counter -> User-triggered JS Interaction -> Clearly demonstrates the unique economic model and its direct impact on TVL.
        - Delivery Tracking -> Change -> HTML/CSS Timeline -> User-triggered JS Animation -> Visualizes the oracle's role in connecting real-world events to on-chain actions.
        - DeFi Yield -> Inform -> Animated Counter (Increased Value) -> JS Interaction -> Shows a more compelling financial benefit for users.
    -->
    <!-- CONFIRMATION: NO SVG graphics used. NO Mermaid JS used. -->
</head>
<body class="bg-[#F9F7F3] text-[#333333] antialiased">

    <div id="step-indicator" class="step-indicator"></div>

    <main>
        <section id="problem" class="section">
            <h1 class="text-3xl md:text-4xl font-bold mb-4">P2P Trading,<br>Still Feeling Risky?</h1>
            <p class="text-lg md:text-xl text-gray-600 mb-8">"Can I really trust this person?"</p>
            <div class="bg-white/60 backdrop-blur-sm p-6 rounded-2xl shadow-lg w-full max-w-sm">
                <p class="text-gray-500 text-sm">Annual P2P Fraud Damage</p>
                <p id="fraud-amount" class="text-4xl md:text-5xl font-bold text-[#14746F] my-2">$0</p>
                <p class="text-gray-500 text-sm">Over 80,000 cases per year in S. Korea</p>
            </div>
            <p class="mt-8 text-gray-500 animate-pulse">Scroll down to see the solution â–¼</p>
        </section>

        <section id="solution" class="section">
            <img src="https://ppl-ai-code-interpreter-files.s3.amazonaws.com/web/direct-files/98dcd0dd791b8b9658df418d430c7dad/41e73e11-51dd-4d17-a16a-7d7b189ac405/Maedeup%20Logo.jpg" alt="Maedeup" class="w-24 h-24 mb-6 rounded-full shadow-md">
            <h2 class="text-3xl md:text-4xl font-bold mb-2">Maedeup</h2>
            <p class="text-xl md:text-2xl text-gray-700">The Dawn of Fraud-Free P2P Commerce</p>
            <p class="text-lg text-gray-600 mt-4">Connecting Trust, Sealing the Deal.</p>
            <div class="flex space-x-4 mt-8">
                <span class="bg-gray-200 text-gray-700 px-3 py-1 rounded-full text-sm font-medium">#Kaia_Blockchain</span>
                <span class="bg-gray-200 text-gray-700 px-3 py-1 rounded-full text-sm font-medium">#KRW_Stablecoin</span>
            </div>
        </section>

        <section id="app-home" class="section">
            <h2 class="text-3xl md:text-4xl font-bold mb-6">Explore the Maedeup Platform</h2>
            <div class="w-full max-w-sm bg-white rounded-3xl shadow-2xl p-4 border border-gray-200">
                <div class="flex justify-between items-center mb-4 px-2">
                    <img src="https://ppl-ai-code-interpreter-files.s3.amazonaws.com/web/direct-files/98dcd0dd791b8b9658df418d430c7dad/41e73e11-51dd-4d17-a16a-7d7b189ac405/Maedeup%20Logo.jpg" alt="Maedeup" class="w-8 h-8 rounded-full">
                    <button id="connect-wallet-btn" class="bg-[#14746F] text-white px-4 py-2 rounded-full text-sm font-semibold hover:bg-[#11615C] transition">Connect Wallet</button>
                </div>
                <div class="relative mb-4">
                    <input type="text" placeholder="What are you looking for?" class="w-full bg-gray-100 rounded-full py-2 px-4 border-transparent focus:ring-2 focus:ring-[#14746F] focus:outline-none">
                </div>
                <div class="grid grid-cols-2 gap-4">
                    <div class="bg-gray-100 rounded-xl p-2">
                        <img src="https://images.unsplash.com/photo-1517336714731-489689fd1ca8?q=80&w=1926&auto=format&fit=crop" alt="MacBook Pro" class="rounded-lg w-full h-32 object-cover">
                        <p class="font-semibold mt-2 text-sm">MacBook Pro 14"</p>
                        <p class="text-gray-600 text-xs">â‚©2,100,000</p>
                    </div>
                    <div class="bg-gray-100 rounded-xl p-2">
                        <img src="https://images.unsplash.com/photo-1605464315542-bda3e2f4e605?q=80&w=2070&auto=format&fit=crop" alt="AirPods Max" class="rounded-lg w-full h-32 object-cover">
                        <p class="font-semibold mt-2 text-sm">AirPods Max</p>
                        <p class="text-gray-600 text-xs">â‚©650,000</p>
                    </div>
                </div>
            </div>
        </section>

        <section id="escrow" class="section">
            <h2 class="text-3xl md:text-4xl font-bold mb-2">Trust, Executed by Code</h2>
            <p class="text-lg text-gray-600 mb-8">Smart Contract Escrow</p>
            <div class="w-full max-w-sm space-y-4">
                <div id="buyer-wallet" class="bg-white p-4 rounded-xl shadow-md flex items-center justify-between transition-all duration-500">
                    <span>ðŸ‘¤ Buyer's Wallet</span>
                    <span class="font-bold text-green-600">â‚©500,000</span>
                </div>
                <div class="flex justify-center h-6">
                    <svg id="arrow-to-contract" class="w-6 h-6 text-gray-400 transition-opacity duration-500 opacity-0" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"></path></svg>
                </div>
                <div id="smart-contract" class="bg-white p-4 rounded-xl shadow-md flex items-center justify-between border-2 border-transparent transition-all duration-500">
                    <span>ðŸ”’ Smart Contract</span>
                    <span id="contract-balance" class="font-bold text-gray-500">â‚©0</span>
                </div>
                <div class="flex justify-center h-6">
                     <svg id="arrow-to-seller" class="w-6 h-6 text-gray-400 transition-opacity duration-500 opacity-0" fill="none" stroke="currentColor" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"></path></svg>
                </div>
                <div id="seller-wallet" class="bg-white p-4 rounded-xl shadow-md flex items-center justify-between transition-all duration-500">
                    <span>ðŸ’¼ Seller's Wallet</span>
                    <span id="seller-balance" class="font-bold">â‚©0</span>
                </div>
            </div>
            <p id="escrow-status" class="mt-6 text-gray-600 font-medium h-5"></p>
            <button id="escrow-sim-btn" class="sim-button">Start Escrow Simulation</button>
        </section>

        <section id="competitive-deposit" class="section">
            <h2 class="text-3xl md:text-4xl font-bold mb-2">Efficient Price Discovery</h2>
            <p class="text-lg text-gray-600 mb-8">Competitive Deposit System</p>
            <div class="bg-white/60 backdrop-blur-sm p-6 rounded-2xl shadow-lg w-full max-w-sm">
                <p class="text-gray-500 text-sm">Item: MacBook Pro 14"</p>
                <p class="font-bold text-xl mb-4">â‚©2,100,000</p>
                <div id="bidders-list" class="text-left space-y-2 text-sm mb-4">
                    <p>ðŸ‘¤ 0x1a2b... deposited: â‚©2,100,000</p>
                </div>
                <hr class="my-4">
                <p class="text-gray-500 text-sm">Current Total Value Locked (TVL)</p>
                <p id="tvl-amount" class="text-3xl font-bold text-[#14746F] mt-1">â‚©2,100,000</p>
            </div>
            <button id="deposit-sim-btn" class="sim-button">Simulate New Bid</button>
        </section>
        
        <section id="oracle" class="section">
            <h2 class="text-3xl md:text-4xl font-bold mb-2">Connecting to the Real World</h2>
            <p class="text-lg text-gray-600 mb-8">Oracle-Powered Delivery Tracking</p>
            <div class="w-full max-w-sm bg-white p-6 rounded-2xl shadow-lg">
                <h3 class="font-bold text-lg mb-4">Delivery Status</h3>
                <ul id="delivery-steps" class="space-y-4 text-left">
                    <li class="flex items-center text-gray-400 transition-colors duration-500">
                        <div class="w-6 h-6 rounded-full border-2 border-gray-400 mr-4 flex-shrink-0"></div>
                        <span>Package Picked Up</span>
                    </li>
                    <li class="flex items-center text-gray-400 transition-colors duration-500">
                        <div class="w-6 h-6 rounded-full border-2 border-gray-400 mr-4 flex-shrink-0"></div>
                        <span>Arrived at Hub</span>
                    </li>
                    <li class="flex items-center text-gray-400 transition-colors duration-500">
                        <div class="w-6 h-6 rounded-full border-2 border-gray-400 mr-4 flex-shrink-0"></div>
                        <span>Out for Delivery</span>
                    </li>
                    <li class="flex items-center text-gray-400 transition-colors duration-500">
                        <div class="w-6 h-6 rounded-full border-2 border-gray-400 mr-4 flex-shrink-0"></div>
                        <span>Delivered</span>
                    </li>
                </ul>
                <p id="oracle-status" class="mt-6 text-sm text-[#14746F] font-semibold h-5"></p>
            </div>
            <button id="oracle-sim-btn" class="sim-button">Start Delivery Tracking</button>
        </section>

        <section id="defi-yield" class="section">
            <h2 class="text-3xl md:text-4xl font-bold mb-2">Earn While You Transact</h2>
            <p class="text-lg text-gray-600 mb-8">DeFi Yield on Deposited Funds</p>
            <div class="bg-white/60 backdrop-blur-sm p-8 rounded-2xl shadow-lg w-full max-w-sm">
                <p class="text-gray-500 text-sm">My Total Yield Earnings</p>
                <p id="yield-amount" class="text-4xl md:text-5xl font-bold text-green-600 my-2">+ â‚©0</p>
                <p class="text-gray-600 text-sm">While you wait for a deal,<br>your assets are working for you.</p>
            </div>
        </section>
        
        <section id="vision" class="section">
            <img src="https://ppl-ai-code-interpreter-files.s3.amazonaws.com/web/direct-files/98dcd0dd791b8b9658df418d430c7dad/41e73e11-51dd-4d17-a16a-7d7b189ac405/Maedeup%20Logo.jpg" alt="Maedeup" class="w-24 h-24 mb-6 rounded-full shadow-md">
            <h2 class="text-3xl md:text-4xl font-bold mb-4">The Future of P2P Commerce</h2>
            <p class="text-lg text-gray-600 max-w-md">Beyond used goods, we are building the "Trust as a Service" protocol for all peer-to-peer transactions.</p>
            <div class="mt-10">
                <a href="#" class="text-[#14746F] font-semibold hover:underline">Learn More About Our Project</a>
            </div>
        </section>
    </main>

    <div id="wallet-popup" class="wallet-popup hidden fixed inset-0 bg-black/40 flex items-center justify-center p-4 z-50">
        <div class="bg-white rounded-2xl p-6 w-full max-w-sm text-center">
            <h3 class="text-xl font-bold mb-4">Connect Kaia Wallet</h3>
            <div class="space-y-3">
                <button class="w-full bg-gray-100 hover:bg-gray-200 p-3 rounded-lg font-semibold transition">Kaikas</button>
                <button class="w-full bg-gray-100 hover:bg-gray-200 p-3 rounded-lg font-semibold transition">Klip</button>
            </div>
            <button id="confirm-connect-btn" class="mt-6 w-full bg-[#14746F] text-white py-3 rounded-lg font-semibold hover:bg-[#11615C] transition">Connect</button>
            <button id="close-popup-btn" class="mt-2 text-sm text-gray-500">Close</button>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const sections = document.querySelectorAll('.section');
            const stepIndicator = document.getElementById('step-indicator');
            let animationsRun = {};

            const sectionObserver = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add('visible');
                        const index = Array.from(sections).indexOf(entry.target);
                        updateActiveStep(index);
                        runInitialAnimation(entry.target.id);
                    }
                });
            }, { threshold: 0.4 });

            sections.forEach((section, index) => {
                sectionObserver.observe(section);
                const link = document.createElement('a');
                link.href = `#${section.id}`;
                link.dataset.index = index;
                stepIndicator.appendChild(link);
            });
            
            const stepLinks = stepIndicator.querySelectorAll('a');
            function updateActiveStep(index) {
                stepLinks.forEach((link, i) => {
                    link.classList.toggle('active', i === index);
                });
            }
            updateActiveStep(0);

            function runInitialAnimation(sectionId) {
                if (animationsRun[sectionId]) return;
                if (sectionId === 'problem') {
                    animateCounter('fraud-amount', 242000000, 1500, (val) => `$${(val / 1000000).toFixed(0)} Million`);
                }
                if (sectionId === 'defi-yield') {
                    animateCounter('yield-amount', 125000, 2000, (val) => `+ â‚©${val.toLocaleString()}`);
                }
                animationsRun[sectionId] = true;
            }

            function animateCounter(id, finalValue, duration, format) {
                const element = document.getElementById(id);
                if (!element) return;
                let startValue = 0;
                let startTime = null;

                function animation(currentTime) {
                    if (startTime === null) startTime = currentTime;
                    const progress = Math.min((currentTime - startTime) / duration, 1);
                    const currentValue = Math.floor(progress * finalValue);
                    element.textContent = format(currentValue);
                    if (progress < 1) {
                        requestAnimationFrame(animation);
                    }
                }
                requestAnimationFrame(animation);
            }
            
            // Escrow Simulation
            const escrowSimBtn = document.getElementById('escrow-sim-btn');
            escrowSimBtn.addEventListener('click', () => {
                escrowSimBtn.disabled = true;
                runEscrowAnimation();
            });

            function runEscrowAnimation() {
                const statusEl = document.getElementById('escrow-status');
                const buyerWallet = document.getElementById('buyer-wallet');
                const contract = document.getElementById('smart-contract');
                const sellerWallet = document.getElementById('seller-wallet');
                const arrowToContract = document.getElementById('arrow-to-contract');
                const arrowToSeller = document.getElementById('arrow-to-seller');
                const contractBalance = document.getElementById('contract-balance');
                const sellerBalance = document.getElementById('seller-balance');

                // Reset state
                contractBalance.textContent = "â‚©0";
                sellerBalance.textContent = "â‚©0";
                sellerWallet.classList.remove('bg-green-100');
                contract.classList.remove('border-green-500');
                buyerWallet.style.transform = 'scale(1)';
                contract.style.transform = 'scale(1)';
                arrowToContract.classList.add('opacity-0');
                arrowToSeller.classList.add('opacity-0');

                setTimeout(() => {
                    statusEl.textContent = "Buyer deposits funds into escrow...";
                    arrowToContract.classList.remove('opacity-0');
                    buyerWallet.style.transform = 'scale(0.95)';
                    contract.classList.add('border-green-500');
                }, 500);
                setTimeout(() => {
                    contractBalance.textContent = "â‚©500,000";
                    statusEl.textContent = "Funds are securely locked in the smart contract.";
                }, 1500);
                setTimeout(() => {
                    statusEl.textContent = "Delivery complete! Releasing funds to seller...";
                    arrowToContract.classList.add('opacity-0');
                    arrowToSeller.classList.remove('opacity-0');
                    contract.classList.remove('border-green-500');
                    contract.style.transform = 'scale(0.95)';
                    sellerWallet.classList.add('bg-green-100');
                }, 3000);
                 setTimeout(() => {
                    contractBalance.textContent = "â‚©0";
                    sellerBalance.textContent = "â‚©500,000";
                    statusEl.textContent = "Transaction complete! Funds released automatically.";
                    escrowSimBtn.disabled = false;
                }, 4000);
            }

            // Competitive Deposit Simulation
            const depositSimBtn = document.getElementById('deposit-sim-btn');
            let bidderCount = 1;
            depositSimBtn.addEventListener('click', () => {
                bidderCount++;
                if (bidderCount > 4) { // Reset after 4 bidders
                    document.getElementById('bidders-list').innerHTML = '<p>ðŸ‘¤ 0x1a2b... deposited: â‚©2,100,000</p>';
                    document.getElementById('tvl-amount').textContent = 'â‚©2,100,000';
                    bidderCount = 1;
                    return;
                }
                const newBidder = document.createElement('p');
                const randomHex = Math.random().toString(16).substring(2, 6);
                newBidder.innerHTML = `ðŸ‘¤ 0x${randomHex}... deposited: â‚©2,100,000`;
                newBidder.className = 'opacity-0 transition-opacity duration-500';
                document.getElementById('bidders-list').appendChild(newBidder);
                setTimeout(() => newBidder.classList.remove('opacity-0'), 10);
                
                const currentTVL = 2100000 * (bidderCount -1);
                animateCounter('tvl-amount', currentTVL + 2100000, 500, (val) => `â‚©${val.toLocaleString()}`);
            });

            // Oracle Simulation
            const oracleSimBtn = document.getElementById('oracle-sim-btn');
            oracleSimBtn.addEventListener('click', () => {
                oracleSimBtn.disabled = true;
                runOracleAnimation();
            });

            function runOracleAnimation() {
                const steps = document.getElementById('delivery-steps').querySelectorAll('li');
                const oracleStatus = document.getElementById('oracle-status');
                
                // Reset
                steps.forEach(step => {
                    step.className = 'flex items-center text-gray-400 transition-colors duration-500';
                    step.querySelector('div').className = 'w-6 h-6 rounded-full border-2 border-gray-400 mr-4 flex-shrink-0';
                });
                oracleStatus.textContent = "";

                let currentStep = 0;
                const interval = setInterval(() => {
                    if (currentStep < steps.length) {
                        const el = steps[currentStep];
                        el.classList.remove('text-gray-400');
                        el.classList.add('text-green-600');
                        el.querySelector('div').classList.remove('border-gray-400');
                        el.querySelector('div').classList.add('border-green-600', 'bg-green-600');
                        if (currentStep === 3) {
                            oracleStatus.textContent = "Oracle has confirmed successful delivery.";
                        }
                        currentStep++;
                    } else {
                        clearInterval(interval);
                        oracleSimBtn.disabled = false;
                    }
                }, 1000);
            }

            // Wallet Popup Logic
            const connectWalletBtn = document.getElementById('connect-wallet-btn');
            const walletPopup = document.getElementById('wallet-popup');
            const closePopupBtn = document.getElementById('close-popup-btn');
            const confirmConnectBtn = document.getElementById('confirm-connect-btn');

            connectWalletBtn.addEventListener('click', () => {
                walletPopup.classList.remove('hidden');
            });
            closePopupBtn.addEventListener('click', () => {
                walletPopup.classList.add('hidden');
            });
            confirmConnectBtn.addEventListener('click', () => {
                connectWalletBtn.textContent = '0x1234...abcd';
                connectWalletBtn.classList.add('w-32', 'truncate');
                walletPopup.classList.add('hidden');
            });
        });
    </script>
</body>
</html>
